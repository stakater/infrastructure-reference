#cloud-config
coreos:
  etcd2:
    proxy: on
    listen-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001
  fleet:
    public-ip: $private_ipv4
    metadata: "env=${stack_name},platform=ec2,provider=aws,role=consul"
    etcd_key_prefix: "/stakater/qa/consul/server/"
  update:
    reboot-strategy: off
  units:
    - name: etcd2.service
      command: start
      drop-ins:
        - name: 60-initial-cluster.conf
          content: |
            [Service]
            EnvironmentFile=/etc/sysconfig/initial-cluster
    - name: fleet.service
      command: start
    - name: update-initial-cluster.service
      command: start
      enable: true
      content: |
        [Unit]
        Description= Unit file to run update-initial-cluster script
        [Service]
        Type=oneshot
        TimeoutStartSec=0
        ExecStart=/usr/bin/sh -c "/opt/bin/update-initial-cluster.sh -b ${global_admiral_config_bucket}"
    - name: consul.service
      command: start
      enable: true
      content: |
        [Unit]
        Description=Consul Server
        After=docker.service
        Requires=docker.service
        After=etcd2.service
        Requires=etcd2.service

        [Service]
        TimeoutStartSec=0
        ExecStartPre=/usr/bin/docker pull consul:0.7.1
        ExecStartPre=-/usr/bin/docker rm %n
        ExecStartPre=/usr/bin/sh -c "etcdctl set /qa/consul/server/endpoint $private_ipv4"
        ExecStart=/usr/bin/docker run --rm --name %n \
                                  --net="host" \
                                  -v /consul/data:/consul/data \
                                  consul:0.7.1 agent -server -ui -bind=$private_ipv4 -client=0.0.0.0 -bootstrap
        ExecStop=/usr/bin/docker stop %n
        RestartSec=650
        Restart=always
write_files:
  - path: /opt/bin/update-initial-cluster.sh
    permissions: 0700
    owner: root
    content: |
        #!/bin/bash
        # This script downloads the initial-cluster file from S3 buckets and updates etcd files

        BUCKET_NAME=""
        bOptionFlag=false;
        # Get options from the command line
        while getopts ":b:" OPTION
        do
            case $OPTION in
                b)
                  BUCKET_NAME=$OPTARG
                  bOptionFlag=true;
                  ;;
                *)
                  echo "Usage: $(basename $0) -b <Name of Bucket containing ETCD initial-cluster file>"
                  exit 0
                  ;;
            esac
        done

        if ! $bOptionFlag
        then
          echo "Usage: $(basename $0) -b <Name of Bucket containing ETCD initial-cluster file>"
          exit 0;
        fi

        # Download initial cluster file from S3 bucket
        docker run --rm --name aws-cli -v $(pwd)/aws-cli:/aws stakater/aws-cli aws s3 cp s3://$BUCKET_NAME/etcd/initial-cluster .

        # Wait for file to download
        sleep 5;

        if [ ! -f $(pwd)/aws-cli/initial-cluster ];
        then
          echo "Initial Cluster file not found in $(pwd)/aws-cli/"
          exit 1;
        fi

        initialClusterLocation="/etc/sysconfig"

        # check whether initial cluster is already downloaded or not
        if [ ! -f "$initialClusterLocation"/initial-cluster ];
        then
          sudo mkdir -p $initialClusterLocation;
          # Copy it to specified locations
          sudo cp $(pwd)/aws-cli/initial-cluster $initialClusterLocation
        else
          # Copy it to specified locations
          sudo cp $(pwd)/aws-cli/initial-cluster $initialClusterLocation
          sudo cp $(pwd)/aws-cli/initial-cluster /root/cloudinit

          # Replace the new ip in the etcd cluster file
          newip=$(cat $(pwd)/aws-cli/initial-cluster | grep -o '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}');
          if [ "$newip" != "" ];
          then
            sudo sed -i -r 's/(\b[0-9]{1,3}\.){3}[0-9]{1,3}\b'/$newip/ /var/lib/etcd2/proxy/cluster
          fi
        fi

        # Restart etcd and fleet
        sudo systemctl restart etcd2
        sudo systemctl restart fleet

        # Cleanup

        sudo rm -rf $(pwd)/aws-cli
        echo "Etcd initial cluster updated"