#cloud-config
## This cloud-config contains placeholders to be replaced by ami-baker
## https://github.com/stakater/ami-baker
coreos:
  etcd2:
    proxy: on
    listen-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001
  update:
    reboot-strategy: off
  units:
# fetching ip and hostname from AWS meta-data API instead of using local
# commands/variables (private_ipv4 variable or hostname -i commands)
# due to the "multiple private IPs" issue
    - name: consul-agent.service
      command: start
      enable: true
      content: |
        [Unit]
        Description=Consul Agent
        After=docker.service
        Requires=docker.service
        [Service]
        TimeoutStartSec=0
        ExecStartPre=/opt/bin/download-consul-server-ip.sh -b ${config_bucket_name}
        ExecStartPre=/usr/bin/bash -c "/usr/bin/systemctl set-environment CONSUL_SERVER=$(</consul/server-ip/consul-server-ip)"
        ExecStartPre=/usr/bin/bash -c "/usr/bin/systemctl set-environment FALLBACK_HOST_DNS=$(nslookup $(hostname -i) | grep 'Server' | grep -o '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}')"
        ExecStartPre=/usr/bin/bash -c "/usr/bin/systemctl set-environment IPV4=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)"
        ExecStartPre=/usr/bin/bash -c "/usr/bin/systemctl set-environment HOSTNAME=$(curl http://169.254.169.254/latest/meta-data/hostname)"

        ExecStartPre=/usr/bin/docker pull consul:0.7.1
        ExecStartPre=-/usr/bin/docker rm %n
        ExecStart=/usr/bin/docker run --rm --name %n \
                                  --net="host" \
                                  -e 'CONSUL_ALLOW_PRIVILEGED_PORTS=' \
                                  -v /consul/data:/consul/data \
                                  consul:0.7.1 agent -retry-join=$${CONSUL_SERVER} -dns-port=53 -node=$${HOSTNAME} -bind=$${IPV4} -client=0.0.0.0 -recursor=$${FALLBACK_HOST_DNS}
        ExecStop=/usr/bin/docker stop %n
        RestartSec=100
        Restart=always
    - name: registrator.service
      command: start
      enable: true
      content: |
        [Unit]
        Description=Docker Registrator, Registers running docker containers with consul
        After=docker.service
        Requires=docker.service
        After=consul-agent.service
        Requires=consul-agent.service

        [Service]
        TimeoutStartSec=0
        ExecStartPre=/usr/bin/docker pull gliderlabs/registrator:latest
        ExecStartPre=-/usr/bin/docker rm %n
        ExecStartPre=-/usr/bin/sleep 10
        ExecStart=/usr/bin/docker run --rm --name %n \
                                  --net "host" \
                                  -v /var/run/docker.sock:/tmp/docker.sock \
                                  gliderlabs/registrator:latest consul://localhost:8500
        ExecStop=/usr/bin/docker stop %n
        RestartSec=120
        Restart=always
    - name: data.mount
      content: |
        [Mount]
        What=EFS_DNS:/
        Where=/data
        Type=nfs
    - name: runcmd.service
      command: start
      content: |
        [Unit]
        Description=command
        [Service]
        Type=oneshot
        Environment="EFS_DNS=${efs_dns}"
        ExecStart=/bin/sh -c "AZ_ZONE=$(curl -s -L http://169.254.169.254/latest/meta-data/placement/availability-zone); \
                              sed -i \"s/EFS_DNS/$AZ_ZONE.$EFS_DNS/\" /etc/systemd/system/data.mount; \
                              systemctl daemon-reload; \
                              systemctl restart data.mount"
# 1- Append current availability-zone to EFS_DNS Substring
# 2- Replace EFS_DNS with the resulting value in systemd file
# 3- Restart the systemd unit
    - name: download-filebeat-config.service
      command: start
      content: |
        [Unit]
        Description=Download filebeat template config from s3 bucket
        Requires=docker.service

        [Service]
        Type=oneshot
        RemainAfterExit=true
        ExecStartPre=/usr/bin/mkdir -p /admiral-config/filebeat/consul-templates
        ExecStart=/usr/bin/sh -c "/usr/bin/docker run --rm \
                                  -v /admiral-config/filebeat/consul-templates:/aws stakater/aws-cli \
                                  aws s3 cp s3://${config_bucket_name}/worker/consul-templates/filebeat.ctmpl ."
    - name: filebeat.service
      command: start
      enable: true
      content: |
        [Unit]
        Description=Filebeat service, for beating logs and sending them to Logstash
        Requires=docker.service
        Requires=download-filebeat-config.service
        After=download-filebeat-config.service

        [Service]
        ExecStartPre=/usr/bin/bash -c "/usr/bin/systemctl set-environment IPV4=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)"
        ExecStartPre=/usr/bin/docker pull stakater/filebeat-with-consul-template:0.18.0-rc1
        ExecStartPre=-/usr/bin/docker rm %n
        ExecStart=/usr/bin/sh -c "/usr/bin/docker run --rm --name %n \
                                  --dns=$${IPV4} \
                                  --dns-search=service.consul \
                                  -v /data/logs:/var/log/app \
                                  -v /docker-data/filebeat/:/filebeat-data \
                                  -v /admiral-config/filebeat/consul-templates:/templates \
                                  -l SERVICE_NAME=filebeat \
                                  stakater/filebeat-with-consul-template:0.18.0-rc1"
        ExecStop=/usr/bin/docker stop %n
        RestartSec=60
        Restart=always
    - name: application.service
      command: start
      content: |
        [Unit]
        Description= Application Unit with placeholders to be replaced by ami-baker module
        Requires=docker.service
        Requires=runcmd.service
        After=runcmd.service
        [Service]
        TimeoutStartSec=0
        ExecStartPre=-/usr/bin/docker rm %n
        ExecStart=/usr/bin/docker run --rm --name %n <#DOCKER_OPTS#> <#DOCKER_IMAGE#>
        ExecStop=/usr/bin/docker stop %n
        [Install]
        WantedBy=multi-user.target
    - name: nginx.service
      command: start
      content: |
        [Unit]
        Description=Nginx Service
        Requires=docker.service
        After=docker.service
        [Service]
        TimeoutStartSec=0
        ExecStartPre=/usr/bin/bash -c "/usr/bin/systemctl set-environment IPV4=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)"
        ExecStartPre=-/usr/bin/docker rm %n
        ExecStart=/usr/bin/docker run --rm --name %n \
                                           -p 80:80 \
                                           -v /nginx/conf:/etc/nginx/conf.d/ \
                                           --dns=$${IPV4} \
                                           --dns-search=service.consul \
                                           -l SERVICE_NAME=nginx \
                                           nginx
        ExecStop=/usr/bin/docker stop %n
        [Install]
        WantedBy=multi-user.target

write_files:
  - path: /etc/conf.d/nfs
    permissions: '0644'
    content: |
      OPTS_RPC_MOUNTD=""
  - path: /nginx/conf/default.conf
    permissions: '0644'
    content: |
      server {
        listen 80;

        location /health_check {
              return 200;
        }
        location / {
          #x_forwarded_proto property set by ELB
          if ($http_x_forwarded_proto != 'https') {
           rewrite ^ https://$host$request_uri? permanent;
          }
        }
      }
  - path: /opt/bin/download-consul-server-ip.sh
    permissions: 0700
    owner: root
    content: |
        #!/bin/bash
        # This script download a file with consul server's ip from s3
        BUCKET_NAME=""
        bOptionFlag=false;
        # Get options from the command line
        while getopts ":b:" OPTION
        do
            case $OPTION in
                b)
                  BUCKET_NAME=$OPTARG
                  bOptionFlag=true;
                  ;;
                *)
                  echo "Usage: $(basename $0) -b <Name of Bucket to download the file from>"
                  exit 1
                  ;;
            esac
        done

        if ! $bOptionFlag
        then
          echo "Usage: $(basename $0) -b <Name of Bucket to download the file from>"
          exit 1;
        fi

        sudo mkdir -p /consul/server-ip
        docker run --rm -v /consul/server-ip:/aws stakater/aws-cli aws s3 cp s3://$BUCKET_NAME/consul/consul-server-ip .